# This file is in the public domain.
#
[exchange]

# Master public key used to sign the exchange's various keys
# This must be adjusted to your actual installation.
# MASTER_PUBLIC_KEY = 98NJW3CQHZQGQXTY3K85K531XKPAPAVV4Q5V8PYYRR00NJGZWNVG

# Must be set to the threshold above which transactions
# are flagged for AML review.
# AML_THRESHOLD =

# How many digits does the currency use by default on displays.
# Hint provided to wallets. Should be 2 for EUR/USD/CHF,
# and 0 for JPY. Default is 2 as that is most common.
# Maximum value is 8. Note that this is the number of
# fractions shown in the wallet by default, it is still
# possible to configure denominations with more digits
# and those will then be rendered using 'tiny' fraction
# capitals (like at gas stations) when present.
CURRENCY_FRACTION_DIGITS = 2

# Specifies a program (binary) to run on KYC attribute data to decide
# whether we should immediately flag an account for AML review.
# The KYC attribute data will be passed on standard-input.
# Return non-zero to trigger AML review of the new user.
KYC_AML_TRIGGER = true

# Attribute encryption key for storing attributes encrypted
# in the database. Should be a high-entropy nonce.
ATTRIBUTE_ENCRYPTION_KEY = SET_ME_PLEASE

# Set to NO to disable rewards.
ENABLE_REWARDS = YES

# How long do we allow /keys to be cached at most? The actual
# limit is the minimum of this value and the first expected
# significant change in /keys based on the expiration times.
# Used to artificially reduce caching (addresses #5747).
MAX_KEYS_CACHING = forever

# After how many requests should the exchange auto-restart
# (to address potential issues with memory fragmentation)?
# If this option is not specified, auto-restarting is disabled.
# MAX_REQUESTS = 100000

# How to access our database
DB = postgres

# Network configuration for the normal API/service HTTP server
# serve via tcp socket (on PORT)
SERVE = tcp

# Unix domain socket to listen on,
# only effective with "SERVE = unix"
UNIXPATH = ${TALER_RUNTIME_DIR}/exchange-httpd/exchange-http.sock
UNIXPATH_MODE = 660

# HTTP port the exchange listens to
PORT = 8081

# Base URL of the exchange (public-facing).  Due to reverse proxies,
# this may or may not match our port or hostname at all and can thus
# not be determined automatically. Note that a globally reachable name
# is required, so 'localhost' will not work except for testing.
# Required for wire transfers as we need to include it in the wire
# transfers to enable tracking.
BASE_URL = http://localhost:8081/

# How long should the aggregator sleep if it has nothing to do?
AGGREGATOR_IDLE_SLEEP_INTERVAL = 60 s

# What type of asset is the exchange managing? Used to adjust
# the user-interface of the wallet.
# Possibilities include: "fiat", "regional" and "crypto".
# In the future (and already permitted but not yet supported by wallets)
# we also expect to have "stock" and "future" (and more).
# Default is "fiat".
ASSET_TYPE = "fiat"

# FIXME: document!
ROUTER_IDLE_SLEEP_INTERVAL = 60 s

# How big is an individual shard to be processed
# by taler-exchange-expire (in time).  It may take
# this much time for an expired purse to be really
# cleaned up and the coins refunded.
EXPIRE_SHARD_SIZE = 60 s

# How long should the transfer tool
# sleep if it has nothing to do?
TRANSFER_IDLE_SLEEP_INTERVAL = 60 s

# How long should the closer tool
# sleep if it has nothing to do?
CLOSER_IDLE_SLEEP_INTERVAL = 60 s

# Values of 0 or above 2^31 disable sharding, which
# is a sane default for most use-cases.
# When changing this value, you MUST stop all
# aggregators and manually run
#
# $ taler-exchange-dbinit -s
#
# against the exchange's database. Otherwise, the
# aggregation logic will break badly!
AGGREGATOR_SHARD_SIZE = 2147483648

# Values of 0 or above 2^31 disable sharding, which
# is a sane default for most use-cases.
# When changing this value, you MUST stop all
# aggregators and manually run
#
# $ taler-exchange-dbinit -s
#
# against the exchange's database. Otherwise, the
# aggregation logic will break badly!
ROUTER_SHARD_SIZE = 2147483648

# How long should wirewatch sleep if it has nothing to do?
# (Set very aggressively here for the demonstrators to be
# super fast.)
WIREWATCH_IDLE_SLEEP_INTERVAL = 1 s

# how long are the signatures with the signkey valid?
SIGNKEY_LEGAL_DURATION = 2 years

# Directory with our terms of service.
TERMS_DIR = $TALER_DATA_HOME/terms/

# Etag / filename for the terms of service.
TERMS_ETAG = exchange-tos-v0

# Directory with our privacy policy.
PRIVACY_DIR = $TALER_DATA_HOME/terms/

# Etag / filename for the privacy policy.
PRIVACY_ETAG = exchange-pp-v0
