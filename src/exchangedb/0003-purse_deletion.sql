--
-- This file is part of TALER
-- Copyright (C) 2014--2022 Taler Systems SA
--
-- TALER is free software; you can redistribute it and/or modify it under the
-- terms of the GNU General Public License as published by the Free Software
-- Foundation; either version 3, or (at your option) any later version.
--
-- TALER is distributed in the hope that it will be useful, but WITHOUT ANY
-- WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR
-- A PARTICULAR PURPOSE.  See the GNU General Public License for more details.
--
-- You should have received a copy of the GNU General Public License along with
-- TALER; see the file COPYING.  If not, see <http://www.gnu.org/licenses/>
--

CREATE OR REPLACE FUNCTION create_table_purse_deletion(
  IN shard_suffix VARCHAR DEFAULT NULL
)
RETURNS VOID
LANGUAGE plpgsql
AS $$
BEGIN
  PERFORM create_partitioned_table(
    'CREATE TABLE IF NOT EXISTS %I'
      '(purse_deletion_serial_id BIGINT GENERATED BY DEFAULT AS IDENTITY' -- UNIQUE'
      ',purse_sig BYTEA CHECK (LENGTH(purse_sig)=64)'
      ',XXX VARCHAR NOT NULL'
    ') %s ;'
    ,'purse_deletion'
    ,'PARTITION BY HASH (XXX)'
    ,shard_suffix
  );
  COMMENT ON TABLE purse_deletion
    IS 'signatures affirming explicit purse deletions';
  COMMENT ON COLUMN purse_deletion.purse_sig
    IS 'signature of type XXX';
END
$$;
COMMENT ON FUNCTION create_table_purse_deletion
  IS 'Creates the purse_deletion table';

CREATE OR REPLACE FUNCTION constrain_table_purse_deletion(
  IN partition_suffix VARCHAR
)
RETURNS void
LANGUAGE plpgsql
AS $$
BEGIN
  EXECUTE FORMAT (
    'ALTER TABLE purse_deletion_' || partition_suffix || ' '
      'ADD CONSTRAINT purse_deletion_' || partition_suffix || '_XXX '
        'UNIQUE (XXX)'
  );
END
$$;

CREATE OR REPLACE FUNCTION alter_create_was_deleted_table_purse_requests (
  IN partition_suffix VARCHAR
)
RETURNS void
LANGUAGE plpgsql
AS $$
BEGIN
  EXECUTE FORMAT (
    'ALTER TABLE purse_requests_' || partition_suffix ||
    ' ADD COLUMN'
    ' was_deleted BOOLEAN NOT NULL DEFAULT(FALSE)'
  );
END
$$;

INSERT INTO exchange_tables
    (name
    ,version
    ,action
    ,partitioned
    ,by_range)
  VALUES
    ('purse_deletion'
    ,'exchange-0002'
    ,'create'
    ,TRUE
    ,FALSE),
    ('purse_deletion'
    ,'exchange-0002'
    ,'constrain'
    ,TRUE
    ,FALSE),
    ('purse_requests'
    ,'exchange-0002'
    ,'alter_create_was_deleted'
    ,TRUE
    ,FALSE);
